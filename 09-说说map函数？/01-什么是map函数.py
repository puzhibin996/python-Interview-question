

# map（）是一个内置的高阶函数，用于将其制定的函数应用于可迭代对象的所有元素上，产生一个新的迭代器。
# map（） 函数接受两个主要参数；一个是函数，另一个是可迭代的对象，如果传递给map（）的函数有多个参数，
# 那么可以同时传递多个可迭代对象，每个采纳数对应一个可迭代对象。

# 基本语法
# map（function，iterable，...）

# function：一个函数，他可以接受一个或多个采纳数，并返回一个值
# iterable： 一个或多个可迭代对象，如列表、元组等。

# 返回值：
# map（）返回一个迭代器，这个迭代器会产生将function应用于iterable中的每个元素后的结果。
# 通常，你需要将结果转换为列表、元组或其他序列类型，方便使用。

# 假设我们有一个列表，我们想要计算列表中每个元素的平方
numbers = [1, 2, 3, 4, 5]
# 使用map（）函数和lambda表达式计算平方
squares = map(lambda x:x**2,numbers)
# 将结果转换为列表并打印
squares_list = list(squares)
print(squares_list)