from functools import partial


# 偏函数（Partial function）是python中functools 模块提供了一种工具，用于冻结部分函数参数从而创建新的可调用对象。
# 偏函数的主要作用是减少重复的参数传递，使代码更加清晰和简洁。
# 当你有一个函数，他接受多个参数，但你经常需要以相同的某些参数值来调用它，这时偏函数就爱可以派上用场。
# 你可以使用偏函数 预先设定这些常量参数，然后得到一个新的函数，这个新函数只需要传递剩余的参数即可。

# 假设一个函数有 a,b，他接收两个参数 a和b，并返回他们的和：
def add(a,b):
    return a+b

he = add(1,2)
print(he)
# 如果经常需要调用add函数，其中a总是为5，那么我们可以使用偏函数来简化这个过程。
# 创建一个偏函数，其中a参数固定位5
add_five = partial(add,5)
# 现在add_five函数只需要一个参数
result = add_five(5) # 相当于add(5,5)
print(result)

# 偏函数的使用场景
# 偏函数在一下场景中特别有用；
# 参数固定：
# 当某个函数的一个或多个参数总是需要使用相同的值时，偏函数可以简化函数调用，避免每次调用时都要重复输入相同的参数
# 回调函数：
# 在处理事件驱动的编程或异步编程时，偏函数可以用来预设回调函数的参数，使得回调函数的签名更简单。
# 函数式编程：
# 在函数式编程中，偏函数可以用于组合多个函数，构建更复杂的函数，而无需修改原始函数的定义。
# 库函数适配：
# 当你需要适配一个库函数，使其符合你特定需求时，偏函数可以用来调整参数，使得库函数的行为更符合预期。

# 总结：
# 偏函数在python中提供了一种方便的方式来创建有预设的新函数，这不仅可以减少代码的冗余，还可以提高代码的可读性和维护下。


