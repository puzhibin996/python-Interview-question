




Fisher-Yates洗牌算法：
这是一个经典洗牌算法，时间复杂度为o（n），空间复杂度为o(1)。
他通过从后往前遍历裂变，并在每次遍历时随机选择一个未处理的元素与当前元素交换位置，已达到打乱顺序的效果。
这种方法保证了每个元素在任意位置的概率都是均匀的。

random模块：
python的random模块提供了许多生成随机数的工具。在这里我们使用了random.randint(0,i)来生成一个在0和当前索引之间的随机整数。

其他打乱列表的方法：
random.shuffle(list)：这是python标准库提供的一种直接打乱列表的方法，不过他同样使用Fisher-Yates洗牌算法，但是不满足，不能使用额外内存空间 的限制条件。
自实现打乱函数：如果直接使用内置的random.sample(list,len(list)),这种方法也是先创建一个拷贝列表然后打乱。

边界情况处理：
空列表：代码将自然处理，因为列表的长度为0，循环不会执行，函数会直接返回空列表。
单元素列表：对于只有一个元素的列表，同样不会进入循环，将直接返回，是正好符合原地打乱的要求。
